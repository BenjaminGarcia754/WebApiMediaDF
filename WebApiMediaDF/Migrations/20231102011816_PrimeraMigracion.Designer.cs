// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApiMediaDF.Migrations
{
    [DbContext(typeof(WebApiMediaDbContex))]
    [Migration("20231102011816_PrimeraMigracion")]
    partial class PrimeraMigracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Comentarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoRelacionado")
                        .HasColumnType("int");

                    b.Property<int?>("VideoRelacionadoNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoRelacionadoNavigationId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TipoReporte")
                        .HasColumnType("int");

                    b.Property<int?>("TipoReporteNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioReporte")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioReporteNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("VideoReporte")
                        .HasColumnType("int");

                    b.Property<int?>("VideoReporteNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoReporteNavigationId");

                    b.HasIndex("UsuarioReporteNavigationId");

                    b.HasIndex("VideoReporteNavigationId");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("TipoReporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposReporte");
                });

            modelBuilder.Entity("TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = "Usuario"
                        });
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDeUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Materia")
                        .HasColumnType("int");

                    b.Property<int?>("MateriaNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Valoracion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriaNavigationId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("VideoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVideo")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoTypes");
                });

            modelBuilder.Entity("Comentarios", b =>
                {
                    b.HasOne("Video", "VideoRelacionadoNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("VideoRelacionadoNavigationId");

                    b.Navigation("VideoRelacionadoNavigation");
                });

            modelBuilder.Entity("Reporte", b =>
                {
                    b.HasOne("TipoReporte", "TipoReporteNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("TipoReporteNavigationId");

                    b.HasOne("Usuario", "UsuarioReporteNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("UsuarioReporteNavigationId");

                    b.HasOne("Video", "VideoReporteNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("VideoReporteNavigationId");

                    b.Navigation("TipoReporteNavigation");

                    b.Navigation("UsuarioReporteNavigation");

                    b.Navigation("VideoReporteNavigation");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.HasOne("TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.HasOne("Materia", "MateriaNavigation")
                        .WithMany("Videos")
                        .HasForeignKey("MateriaNavigationId");

                    b.Navigation("MateriaNavigation");
                });

            modelBuilder.Entity("VideoType", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany("VideoTypes")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("Video", "Video")
                        .WithMany("VideoTypes")
                        .HasForeignKey("VideoId");

                    b.Navigation("Usuario");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Materia", b =>
                {
                    b.Navigation("Videos");
                });

            modelBuilder.Entity("TipoReporte", b =>
                {
                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("Reportes");

                    b.Navigation("VideoTypes");
                });

            modelBuilder.Entity("Video", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Reportes");

                    b.Navigation("VideoTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
